services:
  web:
    build: .
    container_name: chat-backend
    environment:
      - DB_URI=mysql+pymysql://chatuser:chatpass@db:3306/chatdb
      - SECRET_KEY=supersecret
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "5000"
    healthcheck:
      # TCP socket probe to 127.0.0.1:5000 (no curl/wget required)
      test: ["CMD-SHELL", "python - <<'PY'\nimport socket,sys\ns=socket.socket(); s.settimeout(2)\ntry:\n  s.connect(('127.0.0.1',5000)); s.close(); sys.exit(0)\nexcept Exception:\n  sys.exit(1)\nPY"]
      interval: 15s
      timeout: 5s
      retries: 6
      start_period: 20s
    restart: unless-stopped
    networks:
      - chatnet

  nginx:
    image: nginx:latest
    container_name: chat-proxy
    depends_on:
      - web
    ports:
      - "38080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    networks:
      - chatnet

  db:
    image: mysql:8.0
    container_name: chat-mysql
    command:
      - --default-authentication-plugin=mysql_native_password
      - --max_connections=50
      - --innodb_buffer_pool_size=64M
      - --innodb_log_file_size=64M
      - --performance_schema=OFF
    environment:
      - MYSQL_DATABASE=chatdb
      - MYSQL_USER=chatuser
      - MYSQL_PASSWORD=chatpass
      - MYSQL_ROOT_PASSWORD=rootpass
    volumes:
      - dbdata:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-prootpass"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s
    restart: unless-stopped
    networks:
      - chatnet

networks:
  chatnet:
    driver: bridge

volumes:
  dbdata:
